# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: OPERANDI CI/CD

# the workflow executes on pushes or pull requests to the master branch
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

# these are the jobs that are executed. Currently, there are only two jobs - build and publish.
jobs:
  build:

    # the CI pipeline runs on the operating systems mentioned in matrix.os (below)
    runs-on: ${{ matrix.os }}
    strategy:
      # when fail-fast is set to true, GitHub cancels all in-progress jobs if any matrix job fails. Default: true
      fail-fast: false
      # matrices define different versions or operating systems
      matrix:
        python-version: ["3.8", "3.9", "3.10"]
        # other possible options for os are: [windows-latest, macOS-latest]
        os: [ubuntu-latest]
    
    # steps of the build job
    steps:
    - uses: actions/checkout@v2
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
        
    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install flake8
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
        
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

  publish: 
    needs: build
    runs-on: ubuntu-latest

    env:
      DOCKER_USER: ${{ secrets.DOCKER_USERNAME }}
      DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
      REPO_NAME: operandi-all-in-one
      BASE_IMAGE: ubuntu:18.04

    steps:
    - uses: actions/checkout@v2
    - name: Docker login
      run: docker login -u $DOCKER_USER -p $DOCKER_PASSWORD
      
    - name: Get the current build date
      id: date
      run: echo "::set-output name=date::$(date +'%Y-%m-%d--%M-%S')"
      
    - name: Docker build
      run: docker build . --file Dockerfile --tag $DOCKER_USER/$REPO_NAME:${{ steps.date.outputs.date }} --build-arg BASE_IMAGE=$BASE_IMAGE
      
    - name: Docker push
      run: docker push $DOCKER_USER/$REPO_NAME:${{ steps.date.outputs.date }}     

