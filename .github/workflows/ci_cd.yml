# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: OPERANDI CI/CD

# the workflow executes on pushes or pull requests to the master branch
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

# these are the jobs that are executed. Currently, there are only two jobs - build and publish.
jobs:
  build:

    # the CI pipeline runs on the operating systems mentioned in matrix.os (below)
    runs-on: ${{ matrix.os }}
    strategy:
      # when fail-fast is set to true, GitHub cancels all in-progress jobs if any matrix job fails. Default: true
      fail-fast: false
      # matrices define different versions or operating systems
      matrix:
        python-version: ["3.8", "3.9", "3.10"]
        # other possible options for os are: [windows-latest, macOS-latest]
        os: [ubuntu-latest]
    
    # steps of the build job
    steps:
    - uses: actions/checkout@v2
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
        
    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install flake8 pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
        
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
        
    - name: Test with pytest
      run: |
        pytest

  publish: 
    needs: build
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    # For ubuntu-latest installing docker is not required
    - name: Build and Push Docker Image
      uses: mr-smithers-excellent/docker-build-push@v5
      with: 
        image: mehmedgit/operandi-test-1.0
        registry: docker.io
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
